= ここがつらいよクラウドネイティブ

== 組織がスケールしない場合は細切れ

== CI/CDを最初に組むまでは大変

showKsの開発は、インフラやCI/CD環境の構築とアプリケーション開発が同時にスタートしました。ここで「あれっ？」と思った方は鋭いです。そう、アプリケーションの開発を開始した段階では、アプリの配置先となるインフラ環境や限られた期間の中でモリモリアプリを進化させるためのCI/CD環境が存在していなかったのです。

まさに草1本生えていない荒野の中に、アプリ開発チームはポツンと立たされることになりました。

インフラ構築チームも手探り状態とはいえ全速力で環境を構築しようと奮闘しました。その足跡は第2章でお伝えしたとおりです。ただし、それでもある程度の時間を要しました。
アプリ開発チームもただ黙って待っているわけにはいきません。第1章でもご紹介したように目指すべきアプリの骨格は当初からうっすらと見えていましたが、それを実際に動くモノ、さらにはshowKs企画として意味のあるモノとして具現化していく必要がありました。

まずは @kojiha がCanvasアプリのプロトタイプをNode.jsで作り始めました。当初は描いたイラストが保存されず、複数のブラウザ間で同じイラストを見ることができなかったりしましたが、徐々に改善されていきました。そう、徐々に。Canvasだけ。

ここで思い出してほしいのが、showKsで目指したのは「マイクロサービスアーキテクチャー（っぽさ）」を持ったアプリの開発体験です。残念ながら、Canvasアプリだけではこれは成り立たず、複数のCanvasから情報を集約するAggregatorや、Aggeregatorの集めた情報を一覧表示するPortalが揃って始めて意味を持ちます。
これらは @inductor により構想と準備が進められましたが、全てのモノを個人環境で開発しようとしても思うように進捗がでませんでした。

そんな中、待望のCI/CD環境ができあがります。自動化されたパイプラインにより、アプリのコードを改修すると即座にビルドが走り、環境へデプロイされるようになったのです。

これを境に、ものすごいスピード感を伴いながらアプリは完成へ向けて進化しはじめます。

これか。これがCI/CDか。すげぇぞ。

頭ではCI/CDがアプリの開発スピードを加速させると理解はしていました。理解はしていましたが、それを体験することがここまで特別なことだったとは。こんな体験をお持ち帰りして貰えるんだ、やったぜ・・・と心の中でニヤニヤしたメンバーがいたかどうかは皆さんのご想像にお任せしますが、少なくともCI/CD環境が整ったことがshowKsプロジェクト成功への大きな転機となったのは間違いありません。

== 技術的進化が早い

KubernetesやCloud Native界隈はまだ技術的進化がとても早くなっています。
Kubernetes自体も3ヶ月に一度メジャーアップデートを行なっていますし、Cloud Native Landscapeに書かれているプロジェクトやプロダクトもどんどん増加していっています。@<fn>{cncf-landscape}
なお、執筆時点（2019-04-01）で662個のが登録されており、とても1つの企業だけで把握しきるのは困難です。
そんな時はMeetupなどのコミュニティに参加し、積極的に情報交換すると良いでしょう。
このshowKsも知らず知らずのうちにMeetupなどで得た知見も少なからず盛り込まれていることでしょう。

//footnote[cncf-landscape][https://landscape.cncf.io/]

技術的進化が早い場合にも、マイクロサービス化の考え方は非常に重要です。
CI/CD環境を整備する際にも構成するミドルウェア自体への依存度もなるべく下げておき、各ソフトウェアは後で変更ができるようにイメージして作成しておくようにしましょう。
例えば、今回はテンプレートエンジンとしてHelmを利用しましたが、代替手段としてKubernetes sig-cliが作っているkustomizeなどもあります。
他にも、Spinnakerを別のCDツールに置き換えるなども手段の一つでしょう。
